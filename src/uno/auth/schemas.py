# SPDX-FileCopyrightText: 2024-present Richard Dahl <richard@dahl.us>
#
# SPDX-License-Identifier: MIT

from uno.db.enums import SchemaDataType
from uno.schemas import (
    Schema,
    ListSchemaBase,
    SelectSchemaBase,
    CreateSchemaBase,
    UpdateSchemaBase,
    DeleteSchemaBase,
)

from uno.routers import Router


user_schemas = [
    Schema(
        name="UserCreate",
        table_name="uno.user",
        doc="Schema to Create a new User into the database",
        base=CreateSchemaBase,
        data_type=SchemaDataType.NATIVE,
        exclude_fields=[
            "id",
            "created_at",
            "owner_id",
            "modified_at",
            "modified_by_id",
            "deleted_at",
            "deleted_by_id",
        ],
        router=Router(
            path_suffix="",
            path_objs="/user",
            method="POST",
            endpoint="post",
            multiple=False,
            include_in_schema=True,
            summary="Create a new User",
            description="Insert a new User into the database",
            tags=["auth"],
        ),
    ),
    Schema(
        name="UserList",
        table_name="uno.user",
        doc="Schema to list Users from the database",
        base=ListSchemaBase,
        data_type=SchemaDataType.HTML,
        include_fields=[
            "id",
            "email",
            "handle",
            "full_name",
            "is_active",
        ],
        router=Router(
            path_suffix="",
            path_objs="/user",
            method="GET",
            endpoint="get",
            multiple=True,
            include_in_schema=True,
            summary="Select list of Users",
            description="Select a list of Users from the database",
            tags=["auth"],
        ),
    ),
    Schema(
        name="UserSelect",
        table_name="uno.user",
        doc="Schema to select a User from the database",
        base=SelectSchemaBase,
        data_type=SchemaDataType.NATIVE,
        exclude_fields=[],
        router=Router(
            path_suffix="/{id}",
            path_objs="/user",
            method="GET",
            endpoint="get_by_id",
            multiple=False,
            include_in_schema=True,
            summary="Select a User",
            description="Select a User from the database",
            tags=["auth"],
        ),
    ),
    Schema(
        name="UserUpdate",
        table_name="uno.user",
        doc="Schema to update a User in the database",
        base=UpdateSchemaBase,
        data_type=SchemaDataType.NATIVE,
        exclude_fields=[
            "id",
            "created_at",
            "modified_at",
            "modified_by_id",
            "deleted_at",
            "deleted_by_id",
        ],
        router=Router(
            path_suffix="/{id}",
            path_objs="/user",
            method="PATCH",
            endpoint="patch",
            multiple=False,
            include_in_schema=True,
            summary="Update a User",
            description="Update a User in the database",
            tags=["auth"],
        ),
    ),
    Schema(
        name="UserDelete",
        table_name="uno.user",
        doc="Schema to delete a User from the database",
        base=DeleteSchemaBase,
        data_type=SchemaDataType.NATIVE,
        include_fields=["id"],
        router=Router(
            path_suffix="/{id}",
            path_objs="/user",
            method="DELETE",
            endpoint="delete",
            multiple=False,
            include_in_schema=True,
            summary="Delete a User",
            description="Delete a User from the database",
            tags=["auth"],
        ),
    ),
    Schema(
        name="UserImport",
        table_name="uno.user",
        doc="Schema to import a User into the database",
        base=DeleteSchemaBase,
        data_type=SchemaDataType.NATIVE,
        router=Router(
            path_suffix="/{id}",
            path_objs="/user",
            method="PUT",
            endpoint="put",
            multiple=False,
            include_in_schema=True,
            summary="Import a User",
            description="Import a User into the database",
            tags=["auth"],
        ),
    ),
]
